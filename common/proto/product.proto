syntax = "proto3";

package productpb;

option go_package = "/productpb;productpb";

// 响应状态码定义
enum ResponseCode {
  SUCCESS = 0;                // 成功
  INTERNAL_ERROR = 500;       // 内部错误
  INVALID_PARAM = 400;        // 参数错误
  NOT_FOUND = 404;           // 资源不找到
  CONFLICT = 409;            // 资源冲突（例如乐观锁冲突）
  INSUFFICIENT_STOCK = 4001;  // 库存不足
}

message BaseResponse {
  int32 code = 1;     // 响应码，0表示成功，非0表示错误
  string msg = 2;     // 响应信息，成功或错误描述
  bytes data = 3;     // 响应数据，可以是任何类型的序列化数据
}

service ProductService {
  rpc UpdateStockWithCAS (UpdateStockWithCASRequest) returns (UpdateStockWithCASResponse);
}

message UpdateStockWithCASRequest {
  int64 id = 1;
  int64 deta = 2;
}

message UpdateStockWithCASResponse {
  BaseResponse base = 1;   // 基础响应信息
}